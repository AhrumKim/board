/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-06-05 07:19:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* @import url('https://fonts.googleapis.com/css2?family=Dongle:wght@300&display=swap');\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Dongle', sans-serif;\r\n");
      out.write("    font-size: 2.75rem;\r\n");
      out.write("} */\r\n");
      out.write("</style>\r\n");
      out.write("<form action=\"register.do\" method=\"post\">\r\n");
      out.write("	<table class=\"container table table-borderless\">\r\n");
      out.write("		<thead class=\"text-center\">\r\n");
      out.write("				<h3>회원가입</h3>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\">\r\n");
      out.write("				<div class=\"form-floating\">\r\n");
      out.write("				  <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("				  <label for=\"floatingInput\">ID</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\">\r\n");
      out.write("				<div class=\"form-floating\">\r\n");
      out.write("				  <input type=\"password\" class=\"form-control\" id=\"pwd\" name=\"pwd\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.member.pwd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("				  <label for=\"floatingInput\">Password</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\">\r\n");
      out.write("				<div class=\"form-floating\">\r\n");
      out.write("				  <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.member.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("				  <label for=\"floatingInput\">Name</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\">\r\n");
      out.write("				<div class=\"form-floating\">\r\n");
      out.write("				  <input type=\"number\" min=1 class=\"form-control\" id=\"age\" name=\"age\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.member.age}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("				  <label for=\"floatingInput\">Age</label>\r\n");
      out.write("				</div>				\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\">\r\n");
      out.write("				Gender : <input type=\"radio\" name=\"gender\" id=\"women\" value=\"여\" checked>여자 \r\n");
      out.write("				<input type=\"radio\" name=\"gender\" id=\"man\" value=\"남\">남자\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\">\r\n");
      out.write("				<div class=\"form-floating\">\r\n");
      out.write("				  <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" onblur=\"validateEmail()\">\r\n");
      out.write("				  <label for=\"floatingInput\">Email</label>\r\n");
      out.write("				</div>	\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"col-md-4\"></td>		\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"row\">\r\n");
      out.write("			<td class=\"col-md-4\"></td>\r\n");
      out.write("			<td class=\"col-md-4\" id=\"warningMsg\"></td>\r\n");
      out.write("			<td class=\"col-md-4 mb-3\"></td>		\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<div class=\"mb-4\">\r\n");
      out.write("		<button type=\"submit\" id=\"submit\" class=\"btn btn-success\">제출</button>\r\n");
      out.write("		<button type=\"reset\" class=\"btn btn-danger\">취소</button>		\r\n");
      out.write("	</div>\r\n");
      out.write("</form>\r\n");
      out.write("<button class=\"btn btn-warning\" onclick = \"location.href='login.do'\">로그인</button>\r\n");
      out.write("<script>\r\n");
      out.write("	const mode = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.mode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";	\r\n");
      out.write("	console.log(mode);\r\n");
      out.write("	if(mode == 'modify'){//수정모드\r\n");
      out.write("		//회원정보 세팅\r\n");
      out.write("		let form = document.querySelectorAll('form')[0];\r\n");
      out.write("		const gender = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.member.gender.trim()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";		\r\n");
      out.write("		form.action = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/memberUpdate.do\";\r\n");
      out.write("		\r\n");
      out.write("		if(gender == \"남\"){\r\n");
      out.write("			document.getElementById(\"man\").checked = true;\r\n");
      out.write("			document.getElementById(\"women\").checked = false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//버튼명 바꾸기\r\n");
      out.write("		let submitButton = document.querySelectorAll('button[type=\"submit\"]')[0];\r\n");
      out.write("		submitButton.value = '수정하기';\r\n");
      out.write("\r\n");
      out.write("		//input태그 막기\r\n");
      out.write("		let inputId = document.getElementById(\"id\");\r\n");
      out.write("		inputId.readOnly = true;\r\n");
      out.write("		inputId.style.backgroundColor = \"grey\";\r\n");
      out.write("		let inputPwd = document.getElementById(\"pwd\");\r\n");
      out.write("		inputPwd.readOnly = true;\r\n");
      out.write("		inputPwd.style.backgroundColor = \"grey\";\r\n");
      out.write("		let inputGender = document.getElementsByName(\"gender\");\r\n");
      out.write("		inputGender[0].disabled = true;\r\n");
      out.write("		inputGender[1].disabled = true;\r\n");
      out.write("		\r\n");
      out.write("		document.getElementsByTagName(\"h3\")[0].innerText = \"회원정보수정\"\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function validateEmail() {\r\n");
      out.write("	      let email = document.getElementById(\"email\").value;\r\n");
      out.write("	      let emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n");
      out.write("	      let msg =  document.getElementById(\"warningMsg\");\r\n");
      out.write("	      if (!emailPattern.test(email) && email != '') {	       \r\n");
      out.write("		    msg.innerText = \"email 양식이 맞지 않습니다.\"\r\n");
      out.write("		    msg.style.color = \"red\";\r\n");
      out.write("		    document.getElementById(\"submit\").disabled = true;\r\n");
      out.write("	      } else {\r\n");
      out.write("    	  	msg.innerText = \"\";\r\n");
      out.write("    	  	document.getElementById(\"submit\").disabled = false;\r\n");
      out.write("	      }\r\n");
      out.write("    }\r\n");
      out.write("	\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
